# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: qir.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='qir.proto',
  package='',
  syntax='proto3',
  serialized_pb=_b('\n\tqir.proto\"\x06\n\x04Null\"\x17\n\x06Number\x12\r\n\x05value\x18\x01 \x01(\x05\"\x17\n\x06\x44ouble\x12\r\n\x05value\x18\x01 \x01(\x01\"\x17\n\x06String\x12\r\n\x05value\x18\x01 \x01(\t\"\x18\n\x07\x42oolean\x12\r\n\x05value\x18\x01 \x01(\x08\"\"\n\x04Scan\x12\x1a\n\x05table\x18\x01 \x01(\x0b\x32\x0b.Expression\"B\n\x07Project\x12\x1b\n\x06\x66ormat\x18\x01 \x01(\x0b\x32\x0b.Expression\x12\x1a\n\x05input\x18\x02 \x01(\x0b\x32\x0b.Expression\"A\n\x06\x46ilter\x12\x1b\n\x06\x66ilter\x18\x01 \x01(\x0b\x32\x0b.Expression\x12\x1a\n\x05input\x18\x02 \x01(\x0b\x32\x0b.Expression\"]\n\x04Sort\x12\x19\n\x04rows\x18\x01 \x01(\x0b\x32\x0b.Expression\x12\x1e\n\tascending\x18\x02 \x01(\x0b\x32\x0b.Expression\x12\x1a\n\x05input\x18\x03 \x01(\x0b\x32\x0b.Expression\"?\n\x05Limit\x12\x1a\n\x05limit\x18\x01 \x01(\x0b\x32\x0b.Expression\x12\x1a\n\x05input\x18\x02 \x01(\x0b\x32\x0b.Expression\">\n\x05Group\x12\x19\n\x04rows\x18\x01 \x01(\x0b\x32\x0b.Expression\x12\x1a\n\x05input\x18\x02 \x01(\x0b\x32\x0b.Expression\"Z\n\x04Join\x12\x1b\n\x06\x66ilter\x18\x01 \x01(\x0b\x32\x0b.Expression\x12\x19\n\x04left\x18\x02 \x01(\x0b\x32\x0b.Expression\x12\x1a\n\x05right\x18\x03 \x01(\x0b\x32\x0b.Expression\"\x1a\n\nIdentifier\x12\x0c\n\x04name\x18\x01 \x01(\t\"C\n\x06Lambda\x12\x1e\n\tparameter\x18\x01 \x01(\x0b\x32\x0b.Expression\x12\x19\n\x04\x62ody\x18\x02 \x01(\x0b\x32\x0b.Expression\"K\n\x0b\x41pplication\x12\x1d\n\x08\x66unction\x18\x01 \x01(\x0b\x32\x0b.Expression\x12\x1d\n\x08\x61rgument\x18\x02 \x01(\x0b\x32\x0b.Expression\"j\n\x0b\x43onditional\x12\x1e\n\tcondition\x18\x01 \x01(\x0b\x32\x0b.Expression\x12\x1c\n\x07on_true\x18\x02 \x01(\x0b\x32\x0b.Expression\x12\x1d\n\x08on_false\x18\x03 \x01(\x0b\x32\x0b.Expression\"\t\n\x07ListNil\"@\n\x08ListCons\x12\x19\n\x04head\x18\x01 \x01(\x0b\x32\x0b.Expression\x12\x19\n\x04tail\x18\x02 \x01(\x0b\x32\x0b.Expression\"b\n\tListDestr\x12\x1a\n\x05input\x18\x01 \x01(\x0b\x32\x0b.Expression\x12\x1b\n\x06on_nil\x18\x02 \x01(\x0b\x32\x0b.Expression\x12\x1c\n\x07on_cons\x18\x03 \x01(\x0b\x32\x0b.Expression\"\n\n\x08TupleNil\"\\\n\tTupleCons\x12\x18\n\x03key\x18\x01 \x01(\x0b\x32\x0b.Expression\x12\x1a\n\x05value\x18\x02 \x01(\x0b\x32\x0b.Expression\x12\x19\n\x04tail\x18\x03 \x01(\x0b\x32\x0b.Expression\"B\n\nTupleDestr\x12\x1a\n\x05input\x18\x01 \x01(\x0b\x32\x0b.Expression\x12\x18\n\x03key\x18\x02 \x01(\x0b\x32\x0b.Expression\"\x17\n\x07\x42uiltin\x12\x0c\n\x04name\x18\x01 \x01(\t\"(\n\x05Table\x12\x10\n\x08\x64\x61tabase\x18\x01 \x01(\t\x12\r\n\x05table\x18\x02 \x01(\t\"\xc6\x05\n\nExpression\x12\x15\n\x04Null\x18\x01 \x01(\x0b\x32\x05.NullH\x00\x12\x19\n\x06Number\x18\x02 \x01(\x0b\x32\x07.NumberH\x00\x12\x19\n\x06\x44ouble\x18\x03 \x01(\x0b\x32\x07.DoubleH\x00\x12\x19\n\x06String\x18\x04 \x01(\x0b\x32\x07.StringH\x00\x12\x1b\n\x07\x42oolean\x18\x05 \x01(\x0b\x32\x08.BooleanH\x00\x12\x15\n\x04Scan\x18\x06 \x01(\x0b\x32\x05.ScanH\x00\x12\x19\n\x06\x46ilter\x18\x07 \x01(\x0b\x32\x07.FilterH\x00\x12\x1b\n\x07Project\x18\x08 \x01(\x0b\x32\x08.ProjectH\x00\x12\x15\n\x04Sort\x18\t \x01(\x0b\x32\x05.SortH\x00\x12\x17\n\x05Limit\x18\n \x01(\x0b\x32\x06.LimitH\x00\x12\x17\n\x05Group\x18\x0b \x01(\x0b\x32\x06.GroupH\x00\x12\x15\n\x04Join\x18\x0c \x01(\x0b\x32\x05.JoinH\x00\x12!\n\nIdentifier\x18\r \x01(\x0b\x32\x0b.IdentifierH\x00\x12\x19\n\x06Lambda\x18\x0e \x01(\x0b\x32\x07.LambdaH\x00\x12#\n\x0b\x41pplication\x18\x0f \x01(\x0b\x32\x0c.ApplicationH\x00\x12#\n\x0b\x43onditional\x18\x10 \x01(\x0b\x32\x0c.ConditionalH\x00\x12\x1b\n\x07ListNil\x18\x11 \x01(\x0b\x32\x08.ListNilH\x00\x12\x1d\n\x08ListCons\x18\x12 \x01(\x0b\x32\t.ListConsH\x00\x12\x1f\n\tListDestr\x18\x13 \x01(\x0b\x32\n.ListDestrH\x00\x12\x1d\n\x08TupleNil\x18\x14 \x01(\x0b\x32\t.TupleNilH\x00\x12\x1f\n\tTupleCons\x18\x15 \x01(\x0b\x32\n.TupleConsH\x00\x12!\n\nTupleDestr\x18\x16 \x01(\x0b\x32\x0b.TupleDestrH\x00\x12\x1b\n\x07\x42uiltin\x18\x17 \x01(\x0b\x32\x08.BuiltinH\x00\x12\x17\n\x05Table\x18\x18 \x01(\x0b\x32\x06.TableH\x00\x42\x06\n\x04node23\n\tEvaluator\x12&\n\x08\x45valuate\x12\x0b.Expression\x1a\x0b.Expression\"\x00\x62\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_NULL = _descriptor.Descriptor(
  name='Null',
  full_name='Null',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=13,
  serialized_end=19,
)


_NUMBER = _descriptor.Descriptor(
  name='Number',
  full_name='Number',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='Number.value', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=21,
  serialized_end=44,
)


_DOUBLE = _descriptor.Descriptor(
  name='Double',
  full_name='Double',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='Double.value', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=46,
  serialized_end=69,
)


_STRING = _descriptor.Descriptor(
  name='String',
  full_name='String',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='String.value', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=71,
  serialized_end=94,
)


_BOOLEAN = _descriptor.Descriptor(
  name='Boolean',
  full_name='Boolean',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='Boolean.value', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=96,
  serialized_end=120,
)


_SCAN = _descriptor.Descriptor(
  name='Scan',
  full_name='Scan',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='table', full_name='Scan.table', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=122,
  serialized_end=156,
)


_PROJECT = _descriptor.Descriptor(
  name='Project',
  full_name='Project',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='format', full_name='Project.format', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='input', full_name='Project.input', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=158,
  serialized_end=224,
)


_FILTER = _descriptor.Descriptor(
  name='Filter',
  full_name='Filter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='filter', full_name='Filter.filter', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='input', full_name='Filter.input', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=226,
  serialized_end=291,
)


_SORT = _descriptor.Descriptor(
  name='Sort',
  full_name='Sort',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='rows', full_name='Sort.rows', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ascending', full_name='Sort.ascending', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='input', full_name='Sort.input', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=293,
  serialized_end=386,
)


_LIMIT = _descriptor.Descriptor(
  name='Limit',
  full_name='Limit',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='limit', full_name='Limit.limit', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='input', full_name='Limit.input', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=388,
  serialized_end=451,
)


_GROUP = _descriptor.Descriptor(
  name='Group',
  full_name='Group',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='rows', full_name='Group.rows', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='input', full_name='Group.input', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=453,
  serialized_end=515,
)


_JOIN = _descriptor.Descriptor(
  name='Join',
  full_name='Join',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='filter', full_name='Join.filter', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='left', full_name='Join.left', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='right', full_name='Join.right', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=517,
  serialized_end=607,
)


_IDENTIFIER = _descriptor.Descriptor(
  name='Identifier',
  full_name='Identifier',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='Identifier.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=609,
  serialized_end=635,
)


_LAMBDA = _descriptor.Descriptor(
  name='Lambda',
  full_name='Lambda',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='parameter', full_name='Lambda.parameter', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='body', full_name='Lambda.body', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=637,
  serialized_end=704,
)


_APPLICATION = _descriptor.Descriptor(
  name='Application',
  full_name='Application',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='function', full_name='Application.function', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='argument', full_name='Application.argument', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=706,
  serialized_end=781,
)


_CONDITIONAL = _descriptor.Descriptor(
  name='Conditional',
  full_name='Conditional',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='condition', full_name='Conditional.condition', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='on_true', full_name='Conditional.on_true', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='on_false', full_name='Conditional.on_false', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=783,
  serialized_end=889,
)


_LISTNIL = _descriptor.Descriptor(
  name='ListNil',
  full_name='ListNil',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=891,
  serialized_end=900,
)


_LISTCONS = _descriptor.Descriptor(
  name='ListCons',
  full_name='ListCons',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='head', full_name='ListCons.head', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tail', full_name='ListCons.tail', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=902,
  serialized_end=966,
)


_LISTDESTR = _descriptor.Descriptor(
  name='ListDestr',
  full_name='ListDestr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='input', full_name='ListDestr.input', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='on_nil', full_name='ListDestr.on_nil', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='on_cons', full_name='ListDestr.on_cons', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=968,
  serialized_end=1066,
)


_TUPLENIL = _descriptor.Descriptor(
  name='TupleNil',
  full_name='TupleNil',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1068,
  serialized_end=1078,
)


_TUPLECONS = _descriptor.Descriptor(
  name='TupleCons',
  full_name='TupleCons',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='TupleCons.key', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='TupleCons.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tail', full_name='TupleCons.tail', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1080,
  serialized_end=1172,
)


_TUPLEDESTR = _descriptor.Descriptor(
  name='TupleDestr',
  full_name='TupleDestr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='input', full_name='TupleDestr.input', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='key', full_name='TupleDestr.key', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1174,
  serialized_end=1240,
)


_BUILTIN = _descriptor.Descriptor(
  name='Builtin',
  full_name='Builtin',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='Builtin.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1242,
  serialized_end=1265,
)


_TABLE = _descriptor.Descriptor(
  name='Table',
  full_name='Table',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='database', full_name='Table.database', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='table', full_name='Table.table', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1267,
  serialized_end=1307,
)


_EXPRESSION = _descriptor.Descriptor(
  name='Expression',
  full_name='Expression',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Null', full_name='Expression.Null', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Number', full_name='Expression.Number', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Double', full_name='Expression.Double', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='String', full_name='Expression.String', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Boolean', full_name='Expression.Boolean', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Scan', full_name='Expression.Scan', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Filter', full_name='Expression.Filter', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Project', full_name='Expression.Project', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Sort', full_name='Expression.Sort', index=8,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Limit', full_name='Expression.Limit', index=9,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Group', full_name='Expression.Group', index=10,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Join', full_name='Expression.Join', index=11,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Identifier', full_name='Expression.Identifier', index=12,
      number=13, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Lambda', full_name='Expression.Lambda', index=13,
      number=14, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Application', full_name='Expression.Application', index=14,
      number=15, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Conditional', full_name='Expression.Conditional', index=15,
      number=16, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ListNil', full_name='Expression.ListNil', index=16,
      number=17, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ListCons', full_name='Expression.ListCons', index=17,
      number=18, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ListDestr', full_name='Expression.ListDestr', index=18,
      number=19, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='TupleNil', full_name='Expression.TupleNil', index=19,
      number=20, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='TupleCons', full_name='Expression.TupleCons', index=20,
      number=21, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='TupleDestr', full_name='Expression.TupleDestr', index=21,
      number=22, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Builtin', full_name='Expression.Builtin', index=22,
      number=23, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Table', full_name='Expression.Table', index=23,
      number=24, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='node', full_name='Expression.node',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1310,
  serialized_end=2020,
)

_SCAN.fields_by_name['table'].message_type = _EXPRESSION
_PROJECT.fields_by_name['format'].message_type = _EXPRESSION
_PROJECT.fields_by_name['input'].message_type = _EXPRESSION
_FILTER.fields_by_name['filter'].message_type = _EXPRESSION
_FILTER.fields_by_name['input'].message_type = _EXPRESSION
_SORT.fields_by_name['rows'].message_type = _EXPRESSION
_SORT.fields_by_name['ascending'].message_type = _EXPRESSION
_SORT.fields_by_name['input'].message_type = _EXPRESSION
_LIMIT.fields_by_name['limit'].message_type = _EXPRESSION
_LIMIT.fields_by_name['input'].message_type = _EXPRESSION
_GROUP.fields_by_name['rows'].message_type = _EXPRESSION
_GROUP.fields_by_name['input'].message_type = _EXPRESSION
_JOIN.fields_by_name['filter'].message_type = _EXPRESSION
_JOIN.fields_by_name['left'].message_type = _EXPRESSION
_JOIN.fields_by_name['right'].message_type = _EXPRESSION
_LAMBDA.fields_by_name['parameter'].message_type = _EXPRESSION
_LAMBDA.fields_by_name['body'].message_type = _EXPRESSION
_APPLICATION.fields_by_name['function'].message_type = _EXPRESSION
_APPLICATION.fields_by_name['argument'].message_type = _EXPRESSION
_CONDITIONAL.fields_by_name['condition'].message_type = _EXPRESSION
_CONDITIONAL.fields_by_name['on_true'].message_type = _EXPRESSION
_CONDITIONAL.fields_by_name['on_false'].message_type = _EXPRESSION
_LISTCONS.fields_by_name['head'].message_type = _EXPRESSION
_LISTCONS.fields_by_name['tail'].message_type = _EXPRESSION
_LISTDESTR.fields_by_name['input'].message_type = _EXPRESSION
_LISTDESTR.fields_by_name['on_nil'].message_type = _EXPRESSION
_LISTDESTR.fields_by_name['on_cons'].message_type = _EXPRESSION
_TUPLECONS.fields_by_name['key'].message_type = _EXPRESSION
_TUPLECONS.fields_by_name['value'].message_type = _EXPRESSION
_TUPLECONS.fields_by_name['tail'].message_type = _EXPRESSION
_TUPLEDESTR.fields_by_name['input'].message_type = _EXPRESSION
_TUPLEDESTR.fields_by_name['key'].message_type = _EXPRESSION
_EXPRESSION.fields_by_name['Null'].message_type = _NULL
_EXPRESSION.fields_by_name['Number'].message_type = _NUMBER
_EXPRESSION.fields_by_name['Double'].message_type = _DOUBLE
_EXPRESSION.fields_by_name['String'].message_type = _STRING
_EXPRESSION.fields_by_name['Boolean'].message_type = _BOOLEAN
_EXPRESSION.fields_by_name['Scan'].message_type = _SCAN
_EXPRESSION.fields_by_name['Filter'].message_type = _FILTER
_EXPRESSION.fields_by_name['Project'].message_type = _PROJECT
_EXPRESSION.fields_by_name['Sort'].message_type = _SORT
_EXPRESSION.fields_by_name['Limit'].message_type = _LIMIT
_EXPRESSION.fields_by_name['Group'].message_type = _GROUP
_EXPRESSION.fields_by_name['Join'].message_type = _JOIN
_EXPRESSION.fields_by_name['Identifier'].message_type = _IDENTIFIER
_EXPRESSION.fields_by_name['Lambda'].message_type = _LAMBDA
_EXPRESSION.fields_by_name['Application'].message_type = _APPLICATION
_EXPRESSION.fields_by_name['Conditional'].message_type = _CONDITIONAL
_EXPRESSION.fields_by_name['ListNil'].message_type = _LISTNIL
_EXPRESSION.fields_by_name['ListCons'].message_type = _LISTCONS
_EXPRESSION.fields_by_name['ListDestr'].message_type = _LISTDESTR
_EXPRESSION.fields_by_name['TupleNil'].message_type = _TUPLENIL
_EXPRESSION.fields_by_name['TupleCons'].message_type = _TUPLECONS
_EXPRESSION.fields_by_name['TupleDestr'].message_type = _TUPLEDESTR
_EXPRESSION.fields_by_name['Builtin'].message_type = _BUILTIN
_EXPRESSION.fields_by_name['Table'].message_type = _TABLE
_EXPRESSION.oneofs_by_name['node'].fields.append(
  _EXPRESSION.fields_by_name['Null'])
_EXPRESSION.fields_by_name['Null'].containing_oneof = _EXPRESSION.oneofs_by_name['node']
_EXPRESSION.oneofs_by_name['node'].fields.append(
  _EXPRESSION.fields_by_name['Number'])
_EXPRESSION.fields_by_name['Number'].containing_oneof = _EXPRESSION.oneofs_by_name['node']
_EXPRESSION.oneofs_by_name['node'].fields.append(
  _EXPRESSION.fields_by_name['Double'])
_EXPRESSION.fields_by_name['Double'].containing_oneof = _EXPRESSION.oneofs_by_name['node']
_EXPRESSION.oneofs_by_name['node'].fields.append(
  _EXPRESSION.fields_by_name['String'])
_EXPRESSION.fields_by_name['String'].containing_oneof = _EXPRESSION.oneofs_by_name['node']
_EXPRESSION.oneofs_by_name['node'].fields.append(
  _EXPRESSION.fields_by_name['Boolean'])
_EXPRESSION.fields_by_name['Boolean'].containing_oneof = _EXPRESSION.oneofs_by_name['node']
_EXPRESSION.oneofs_by_name['node'].fields.append(
  _EXPRESSION.fields_by_name['Scan'])
_EXPRESSION.fields_by_name['Scan'].containing_oneof = _EXPRESSION.oneofs_by_name['node']
_EXPRESSION.oneofs_by_name['node'].fields.append(
  _EXPRESSION.fields_by_name['Filter'])
_EXPRESSION.fields_by_name['Filter'].containing_oneof = _EXPRESSION.oneofs_by_name['node']
_EXPRESSION.oneofs_by_name['node'].fields.append(
  _EXPRESSION.fields_by_name['Project'])
_EXPRESSION.fields_by_name['Project'].containing_oneof = _EXPRESSION.oneofs_by_name['node']
_EXPRESSION.oneofs_by_name['node'].fields.append(
  _EXPRESSION.fields_by_name['Sort'])
_EXPRESSION.fields_by_name['Sort'].containing_oneof = _EXPRESSION.oneofs_by_name['node']
_EXPRESSION.oneofs_by_name['node'].fields.append(
  _EXPRESSION.fields_by_name['Limit'])
_EXPRESSION.fields_by_name['Limit'].containing_oneof = _EXPRESSION.oneofs_by_name['node']
_EXPRESSION.oneofs_by_name['node'].fields.append(
  _EXPRESSION.fields_by_name['Group'])
_EXPRESSION.fields_by_name['Group'].containing_oneof = _EXPRESSION.oneofs_by_name['node']
_EXPRESSION.oneofs_by_name['node'].fields.append(
  _EXPRESSION.fields_by_name['Join'])
_EXPRESSION.fields_by_name['Join'].containing_oneof = _EXPRESSION.oneofs_by_name['node']
_EXPRESSION.oneofs_by_name['node'].fields.append(
  _EXPRESSION.fields_by_name['Identifier'])
_EXPRESSION.fields_by_name['Identifier'].containing_oneof = _EXPRESSION.oneofs_by_name['node']
_EXPRESSION.oneofs_by_name['node'].fields.append(
  _EXPRESSION.fields_by_name['Lambda'])
_EXPRESSION.fields_by_name['Lambda'].containing_oneof = _EXPRESSION.oneofs_by_name['node']
_EXPRESSION.oneofs_by_name['node'].fields.append(
  _EXPRESSION.fields_by_name['Application'])
_EXPRESSION.fields_by_name['Application'].containing_oneof = _EXPRESSION.oneofs_by_name['node']
_EXPRESSION.oneofs_by_name['node'].fields.append(
  _EXPRESSION.fields_by_name['Conditional'])
_EXPRESSION.fields_by_name['Conditional'].containing_oneof = _EXPRESSION.oneofs_by_name['node']
_EXPRESSION.oneofs_by_name['node'].fields.append(
  _EXPRESSION.fields_by_name['ListNil'])
_EXPRESSION.fields_by_name['ListNil'].containing_oneof = _EXPRESSION.oneofs_by_name['node']
_EXPRESSION.oneofs_by_name['node'].fields.append(
  _EXPRESSION.fields_by_name['ListCons'])
_EXPRESSION.fields_by_name['ListCons'].containing_oneof = _EXPRESSION.oneofs_by_name['node']
_EXPRESSION.oneofs_by_name['node'].fields.append(
  _EXPRESSION.fields_by_name['ListDestr'])
_EXPRESSION.fields_by_name['ListDestr'].containing_oneof = _EXPRESSION.oneofs_by_name['node']
_EXPRESSION.oneofs_by_name['node'].fields.append(
  _EXPRESSION.fields_by_name['TupleNil'])
_EXPRESSION.fields_by_name['TupleNil'].containing_oneof = _EXPRESSION.oneofs_by_name['node']
_EXPRESSION.oneofs_by_name['node'].fields.append(
  _EXPRESSION.fields_by_name['TupleCons'])
_EXPRESSION.fields_by_name['TupleCons'].containing_oneof = _EXPRESSION.oneofs_by_name['node']
_EXPRESSION.oneofs_by_name['node'].fields.append(
  _EXPRESSION.fields_by_name['TupleDestr'])
_EXPRESSION.fields_by_name['TupleDestr'].containing_oneof = _EXPRESSION.oneofs_by_name['node']
_EXPRESSION.oneofs_by_name['node'].fields.append(
  _EXPRESSION.fields_by_name['Builtin'])
_EXPRESSION.fields_by_name['Builtin'].containing_oneof = _EXPRESSION.oneofs_by_name['node']
_EXPRESSION.oneofs_by_name['node'].fields.append(
  _EXPRESSION.fields_by_name['Table'])
_EXPRESSION.fields_by_name['Table'].containing_oneof = _EXPRESSION.oneofs_by_name['node']
DESCRIPTOR.message_types_by_name['Null'] = _NULL
DESCRIPTOR.message_types_by_name['Number'] = _NUMBER
DESCRIPTOR.message_types_by_name['Double'] = _DOUBLE
DESCRIPTOR.message_types_by_name['String'] = _STRING
DESCRIPTOR.message_types_by_name['Boolean'] = _BOOLEAN
DESCRIPTOR.message_types_by_name['Scan'] = _SCAN
DESCRIPTOR.message_types_by_name['Project'] = _PROJECT
DESCRIPTOR.message_types_by_name['Filter'] = _FILTER
DESCRIPTOR.message_types_by_name['Sort'] = _SORT
DESCRIPTOR.message_types_by_name['Limit'] = _LIMIT
DESCRIPTOR.message_types_by_name['Group'] = _GROUP
DESCRIPTOR.message_types_by_name['Join'] = _JOIN
DESCRIPTOR.message_types_by_name['Identifier'] = _IDENTIFIER
DESCRIPTOR.message_types_by_name['Lambda'] = _LAMBDA
DESCRIPTOR.message_types_by_name['Application'] = _APPLICATION
DESCRIPTOR.message_types_by_name['Conditional'] = _CONDITIONAL
DESCRIPTOR.message_types_by_name['ListNil'] = _LISTNIL
DESCRIPTOR.message_types_by_name['ListCons'] = _LISTCONS
DESCRIPTOR.message_types_by_name['ListDestr'] = _LISTDESTR
DESCRIPTOR.message_types_by_name['TupleNil'] = _TUPLENIL
DESCRIPTOR.message_types_by_name['TupleCons'] = _TUPLECONS
DESCRIPTOR.message_types_by_name['TupleDestr'] = _TUPLEDESTR
DESCRIPTOR.message_types_by_name['Builtin'] = _BUILTIN
DESCRIPTOR.message_types_by_name['Table'] = _TABLE
DESCRIPTOR.message_types_by_name['Expression'] = _EXPRESSION

Null = _reflection.GeneratedProtocolMessageType('Null', (_message.Message,), dict(
  DESCRIPTOR = _NULL,
  __module__ = 'qir_pb2'
  # @@protoc_insertion_point(class_scope:Null)
  ))
_sym_db.RegisterMessage(Null)

Number = _reflection.GeneratedProtocolMessageType('Number', (_message.Message,), dict(
  DESCRIPTOR = _NUMBER,
  __module__ = 'qir_pb2'
  # @@protoc_insertion_point(class_scope:Number)
  ))
_sym_db.RegisterMessage(Number)

Double = _reflection.GeneratedProtocolMessageType('Double', (_message.Message,), dict(
  DESCRIPTOR = _DOUBLE,
  __module__ = 'qir_pb2'
  # @@protoc_insertion_point(class_scope:Double)
  ))
_sym_db.RegisterMessage(Double)

String = _reflection.GeneratedProtocolMessageType('String', (_message.Message,), dict(
  DESCRIPTOR = _STRING,
  __module__ = 'qir_pb2'
  # @@protoc_insertion_point(class_scope:String)
  ))
_sym_db.RegisterMessage(String)

Boolean = _reflection.GeneratedProtocolMessageType('Boolean', (_message.Message,), dict(
  DESCRIPTOR = _BOOLEAN,
  __module__ = 'qir_pb2'
  # @@protoc_insertion_point(class_scope:Boolean)
  ))
_sym_db.RegisterMessage(Boolean)

Scan = _reflection.GeneratedProtocolMessageType('Scan', (_message.Message,), dict(
  DESCRIPTOR = _SCAN,
  __module__ = 'qir_pb2'
  # @@protoc_insertion_point(class_scope:Scan)
  ))
_sym_db.RegisterMessage(Scan)

Project = _reflection.GeneratedProtocolMessageType('Project', (_message.Message,), dict(
  DESCRIPTOR = _PROJECT,
  __module__ = 'qir_pb2'
  # @@protoc_insertion_point(class_scope:Project)
  ))
_sym_db.RegisterMessage(Project)

Filter = _reflection.GeneratedProtocolMessageType('Filter', (_message.Message,), dict(
  DESCRIPTOR = _FILTER,
  __module__ = 'qir_pb2'
  # @@protoc_insertion_point(class_scope:Filter)
  ))
_sym_db.RegisterMessage(Filter)

Sort = _reflection.GeneratedProtocolMessageType('Sort', (_message.Message,), dict(
  DESCRIPTOR = _SORT,
  __module__ = 'qir_pb2'
  # @@protoc_insertion_point(class_scope:Sort)
  ))
_sym_db.RegisterMessage(Sort)

Limit = _reflection.GeneratedProtocolMessageType('Limit', (_message.Message,), dict(
  DESCRIPTOR = _LIMIT,
  __module__ = 'qir_pb2'
  # @@protoc_insertion_point(class_scope:Limit)
  ))
_sym_db.RegisterMessage(Limit)

Group = _reflection.GeneratedProtocolMessageType('Group', (_message.Message,), dict(
  DESCRIPTOR = _GROUP,
  __module__ = 'qir_pb2'
  # @@protoc_insertion_point(class_scope:Group)
  ))
_sym_db.RegisterMessage(Group)

Join = _reflection.GeneratedProtocolMessageType('Join', (_message.Message,), dict(
  DESCRIPTOR = _JOIN,
  __module__ = 'qir_pb2'
  # @@protoc_insertion_point(class_scope:Join)
  ))
_sym_db.RegisterMessage(Join)

Identifier = _reflection.GeneratedProtocolMessageType('Identifier', (_message.Message,), dict(
  DESCRIPTOR = _IDENTIFIER,
  __module__ = 'qir_pb2'
  # @@protoc_insertion_point(class_scope:Identifier)
  ))
_sym_db.RegisterMessage(Identifier)

Lambda = _reflection.GeneratedProtocolMessageType('Lambda', (_message.Message,), dict(
  DESCRIPTOR = _LAMBDA,
  __module__ = 'qir_pb2'
  # @@protoc_insertion_point(class_scope:Lambda)
  ))
_sym_db.RegisterMessage(Lambda)

Application = _reflection.GeneratedProtocolMessageType('Application', (_message.Message,), dict(
  DESCRIPTOR = _APPLICATION,
  __module__ = 'qir_pb2'
  # @@protoc_insertion_point(class_scope:Application)
  ))
_sym_db.RegisterMessage(Application)

Conditional = _reflection.GeneratedProtocolMessageType('Conditional', (_message.Message,), dict(
  DESCRIPTOR = _CONDITIONAL,
  __module__ = 'qir_pb2'
  # @@protoc_insertion_point(class_scope:Conditional)
  ))
_sym_db.RegisterMessage(Conditional)

ListNil = _reflection.GeneratedProtocolMessageType('ListNil', (_message.Message,), dict(
  DESCRIPTOR = _LISTNIL,
  __module__ = 'qir_pb2'
  # @@protoc_insertion_point(class_scope:ListNil)
  ))
_sym_db.RegisterMessage(ListNil)

ListCons = _reflection.GeneratedProtocolMessageType('ListCons', (_message.Message,), dict(
  DESCRIPTOR = _LISTCONS,
  __module__ = 'qir_pb2'
  # @@protoc_insertion_point(class_scope:ListCons)
  ))
_sym_db.RegisterMessage(ListCons)

ListDestr = _reflection.GeneratedProtocolMessageType('ListDestr', (_message.Message,), dict(
  DESCRIPTOR = _LISTDESTR,
  __module__ = 'qir_pb2'
  # @@protoc_insertion_point(class_scope:ListDestr)
  ))
_sym_db.RegisterMessage(ListDestr)

TupleNil = _reflection.GeneratedProtocolMessageType('TupleNil', (_message.Message,), dict(
  DESCRIPTOR = _TUPLENIL,
  __module__ = 'qir_pb2'
  # @@protoc_insertion_point(class_scope:TupleNil)
  ))
_sym_db.RegisterMessage(TupleNil)

TupleCons = _reflection.GeneratedProtocolMessageType('TupleCons', (_message.Message,), dict(
  DESCRIPTOR = _TUPLECONS,
  __module__ = 'qir_pb2'
  # @@protoc_insertion_point(class_scope:TupleCons)
  ))
_sym_db.RegisterMessage(TupleCons)

TupleDestr = _reflection.GeneratedProtocolMessageType('TupleDestr', (_message.Message,), dict(
  DESCRIPTOR = _TUPLEDESTR,
  __module__ = 'qir_pb2'
  # @@protoc_insertion_point(class_scope:TupleDestr)
  ))
_sym_db.RegisterMessage(TupleDestr)

Builtin = _reflection.GeneratedProtocolMessageType('Builtin', (_message.Message,), dict(
  DESCRIPTOR = _BUILTIN,
  __module__ = 'qir_pb2'
  # @@protoc_insertion_point(class_scope:Builtin)
  ))
_sym_db.RegisterMessage(Builtin)

Table = _reflection.GeneratedProtocolMessageType('Table', (_message.Message,), dict(
  DESCRIPTOR = _TABLE,
  __module__ = 'qir_pb2'
  # @@protoc_insertion_point(class_scope:Table)
  ))
_sym_db.RegisterMessage(Table)

Expression = _reflection.GeneratedProtocolMessageType('Expression', (_message.Message,), dict(
  DESCRIPTOR = _EXPRESSION,
  __module__ = 'qir_pb2'
  # @@protoc_insertion_point(class_scope:Expression)
  ))
_sym_db.RegisterMessage(Expression)


try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class EvaluatorStub(object):
    """*
    A remote QIR evaluation service.
    """

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.Evaluate = channel.unary_unary(
          '/Evaluator/Evaluate',
          request_serializer=Expression.SerializeToString,
          response_deserializer=Expression.FromString,
          )


  class EvaluatorServicer(object):
    """*
    A remote QIR evaluation service.
    """

    def Evaluate(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_EvaluatorServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'Evaluate': grpc.unary_unary_rpc_method_handler(
            servicer.Evaluate,
            request_deserializer=Expression.FromString,
            response_serializer=Expression.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'Evaluator', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaEvaluatorServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """*
    A remote QIR evaluation service.
    """
    def Evaluate(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaEvaluatorStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """*
    A remote QIR evaluation service.
    """
    def Evaluate(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    Evaluate.future = None


  def beta_create_Evaluator_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('Evaluator', 'Evaluate'): Expression.FromString,
    }
    response_serializers = {
      ('Evaluator', 'Evaluate'): Expression.SerializeToString,
    }
    method_implementations = {
      ('Evaluator', 'Evaluate'): face_utilities.unary_unary_inline(servicer.Evaluate),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_Evaluator_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('Evaluator', 'Evaluate'): Expression.SerializeToString,
    }
    response_deserializers = {
      ('Evaluator', 'Evaluate'): Expression.FromString,
    }
    cardinalities = {
      'Evaluate': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'Evaluator', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
